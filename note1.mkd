 观察者模式（observer pattern）

观察者模式定义了对象间的一种一对多的依赖关系，当一个对象的状态发生变化时，所有依赖于它的对象都将得到通知，并自动更新。

观察者模式属于行为型模式，行为型模式关注的时对象之间的通信，观察者模式就是观察者和被观察者之间的通讯。

观察者模式有一个别名时发布-订阅模式，或者订阅0发布模式。

发布订阅模式（pub-sub pattern）

在现在发布订阅模式中，称位发布者的消息发送者不会将消息直接发送给订阅者，者意味着发布者和订阅者不知道彼此的存在，在发布者和订阅者之间存在第三方组建，称位消息代理或调度中心或中间件，它维持者发布者和订阅者之间的联系，过滤所有发布者传入的消息并相应地发送它们给订阅者。

举个例子：你在微博中关注了一个博主，同时还有其他很多人也关注了，当博主发布动态的时候，微博就会位你们推送这条动态，这里博主就时发布者，粉丝就时订阅者，微博就是调度中心，你和博主是没有直接的消息往来的，全是通过微博来协调的。

![观察者和发布订阅的区别](./51555846888_.pic.jpg '区别')

观察者模式：观察者observer直接订阅subscribe主题Subject，而当主题被激活时，会触发fire event 观察者的事件。

发布订阅模式：订阅者Subscriber把自己想订阅的事件注册Subscribe到调度中心Topic，当发布者Publisher发布该事件Publish topic,也就是该事件触发时，由调度中心统一调度Fire Event 订阅者注册到调度中心的处理代码。


如下代码：

猎人发布于订阅任务